// Code generated by MockGen. DO NOT EDIT.
// Source: message-app/services (interfaces: GbeConfigService)

// Package services is a generated GoMock package.
package services

import (
	conf "message-app/conf"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGbeConfigService is a mock of GbeConfigService interface.
type MockGbeConfigService struct {
	ctrl     *gomock.Controller
	recorder *MockGbeConfigServiceMockRecorder
}

// MockGbeConfigServiceMockRecorder is the mock recorder for MockGbeConfigService.
type MockGbeConfigServiceMockRecorder struct {
	mock *MockGbeConfigService
}

// NewMockGbeConfigService creates a new mock instance.
func NewMockGbeConfigService(ctrl *gomock.Controller) *MockGbeConfigService {
	mock := &MockGbeConfigService{ctrl: ctrl}
	mock.recorder = &MockGbeConfigServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGbeConfigService) EXPECT() *MockGbeConfigServiceMockRecorder {
	return m.recorder
}

// GetConfig mocks base method.
func (m *MockGbeConfigService) GetConfig() *conf.GbeConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig")
	ret0, _ := ret[0].(*conf.GbeConfig)
	return ret0
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockGbeConfigServiceMockRecorder) GetConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockGbeConfigService)(nil).GetConfig))
}
